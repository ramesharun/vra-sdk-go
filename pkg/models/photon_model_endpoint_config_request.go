// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PhotonModelEndpointConfigRequest PhotonModelEndpointConfigRequest
//
// swagger:model PhotonModelEndpointConfigRequest
type PhotonModelEndpointConfigRequest struct {

	// associated endpoint links
	AssociatedEndpointLinks []string `json:"associatedEndpointLinks"`

	// auth credentials link
	AuthCredentialsLink string `json:"authCredentialsLink,omitempty"`

	// check for endpoint uniqueness
	CheckForEndpointUniqueness bool `json:"checkForEndpointUniqueness,omitempty"`

	// custom properties
	CustomProperties *CustomProperties `json:"customProperties,omitempty"`

	// endpoint properties
	EndpointProperties *EndpointProperties `json:"endpointProperties,omitempty"`

	// endpoint type
	EndpointType string `json:"endpointType,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// request type
	// Enum: [VALIDATE ENHANCE CHECK_IF_ACCOUNT_EXISTS VALIDATE_REMOVAL]
	RequestType string `json:"requestType,omitempty"`

	// resource link
	ResourceLink string `json:"resourceLink,omitempty"`

	// resource reference
	ResourceReference *URI `json:"resourceReference,omitempty"`

	// task reference
	TaskReference *URI `json:"taskReference,omitempty"`
}

// Validate validates this photon model endpoint config request
func (m *PhotonModelEndpointConfigRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCustomProperties(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEndpointProperties(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRequestType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResourceReference(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTaskReference(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PhotonModelEndpointConfigRequest) validateCustomProperties(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomProperties) { // not required
		return nil
	}

	if m.CustomProperties != nil {
		if err := m.CustomProperties.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("customProperties")
			}
			return err
		}
	}

	return nil
}

func (m *PhotonModelEndpointConfigRequest) validateEndpointProperties(formats strfmt.Registry) error {

	if swag.IsZero(m.EndpointProperties) { // not required
		return nil
	}

	if m.EndpointProperties != nil {
		if err := m.EndpointProperties.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("endpointProperties")
			}
			return err
		}
	}

	return nil
}

var photonModelEndpointConfigRequestTypeRequestTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["VALIDATE","ENHANCE","CHECK_IF_ACCOUNT_EXISTS","VALIDATE_REMOVAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		photonModelEndpointConfigRequestTypeRequestTypePropEnum = append(photonModelEndpointConfigRequestTypeRequestTypePropEnum, v)
	}
}

const (

	// PhotonModelEndpointConfigRequestRequestTypeVALIDATE captures enum value "VALIDATE"
	PhotonModelEndpointConfigRequestRequestTypeVALIDATE string = "VALIDATE"

	// PhotonModelEndpointConfigRequestRequestTypeENHANCE captures enum value "ENHANCE"
	PhotonModelEndpointConfigRequestRequestTypeENHANCE string = "ENHANCE"

	// PhotonModelEndpointConfigRequestRequestTypeCHECKIFACCOUNTEXISTS captures enum value "CHECK_IF_ACCOUNT_EXISTS"
	PhotonModelEndpointConfigRequestRequestTypeCHECKIFACCOUNTEXISTS string = "CHECK_IF_ACCOUNT_EXISTS"

	// PhotonModelEndpointConfigRequestRequestTypeVALIDATEREMOVAL captures enum value "VALIDATE_REMOVAL"
	PhotonModelEndpointConfigRequestRequestTypeVALIDATEREMOVAL string = "VALIDATE_REMOVAL"
)

// prop value enum
func (m *PhotonModelEndpointConfigRequest) validateRequestTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, photonModelEndpointConfigRequestTypeRequestTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PhotonModelEndpointConfigRequest) validateRequestType(formats strfmt.Registry) error {

	if swag.IsZero(m.RequestType) { // not required
		return nil
	}

	// value enum
	if err := m.validateRequestTypeEnum("requestType", "body", m.RequestType); err != nil {
		return err
	}

	return nil
}

func (m *PhotonModelEndpointConfigRequest) validateResourceReference(formats strfmt.Registry) error {

	if swag.IsZero(m.ResourceReference) { // not required
		return nil
	}

	if m.ResourceReference != nil {
		if err := m.ResourceReference.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("resourceReference")
			}
			return err
		}
	}

	return nil
}

func (m *PhotonModelEndpointConfigRequest) validateTaskReference(formats strfmt.Registry) error {

	if swag.IsZero(m.TaskReference) { // not required
		return nil
	}

	if m.TaskReference != nil {
		if err := m.TaskReference.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("taskReference")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PhotonModelEndpointConfigRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PhotonModelEndpointConfigRequest) UnmarshalBinary(b []byte) error {
	var res PhotonModelEndpointConfigRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
