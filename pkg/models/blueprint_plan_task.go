// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BlueprintPlanTask BlueprintPlanTask
//
// swagger:model BlueprintPlanTask
type BlueprintPlanTask struct {

	// Tasks depends on other tasks
	// Read Only: true
	DependsOnTasks []string `json:"dependsOnTasks"`

	// Task input properties
	// Read Only: true
	InputProperties interface{} `json:"inputProperties,omitempty"`

	// Task name
	// Read Only: true
	Name string `json:"name,omitempty"`

	// Resource name
	// Read Only: true
	ResourceName string `json:"resourceName,omitempty"`

	// Resource reason
	// Read Only: true
	// Enum: [CREATE RECREATE UPDATE DELETE ACTION]
	ResourceReason string `json:"resourceReason,omitempty"`

	// Resource type
	// Read Only: true
	ResourceType string `json:"resourceType,omitempty"`
}

// Validate validates this blueprint plan task
func (m *BlueprintPlanTask) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResourceReason(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var blueprintPlanTaskTypeResourceReasonPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CREATE","RECREATE","UPDATE","DELETE","ACTION"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		blueprintPlanTaskTypeResourceReasonPropEnum = append(blueprintPlanTaskTypeResourceReasonPropEnum, v)
	}
}

const (

	// BlueprintPlanTaskResourceReasonCREATE captures enum value "CREATE"
	BlueprintPlanTaskResourceReasonCREATE string = "CREATE"

	// BlueprintPlanTaskResourceReasonRECREATE captures enum value "RECREATE"
	BlueprintPlanTaskResourceReasonRECREATE string = "RECREATE"

	// BlueprintPlanTaskResourceReasonUPDATE captures enum value "UPDATE"
	BlueprintPlanTaskResourceReasonUPDATE string = "UPDATE"

	// BlueprintPlanTaskResourceReasonDELETE captures enum value "DELETE"
	BlueprintPlanTaskResourceReasonDELETE string = "DELETE"

	// BlueprintPlanTaskResourceReasonACTION captures enum value "ACTION"
	BlueprintPlanTaskResourceReasonACTION string = "ACTION"
)

// prop value enum
func (m *BlueprintPlanTask) validateResourceReasonEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, blueprintPlanTaskTypeResourceReasonPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *BlueprintPlanTask) validateResourceReason(formats strfmt.Registry) error {

	if swag.IsZero(m.ResourceReason) { // not required
		return nil
	}

	// value enum
	if err := m.validateResourceReasonEnum("resourceReason", "body", m.ResourceReason); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BlueprintPlanTask) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BlueprintPlanTask) UnmarshalBinary(b []byte) error {
	var res BlueprintPlanTask
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
