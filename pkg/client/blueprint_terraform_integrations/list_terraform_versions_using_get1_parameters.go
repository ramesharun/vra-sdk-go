// Code generated by go-swagger; DO NOT EDIT.

package blueprint_terraform_integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListTerraformVersionsUsingGET1Params creates a new ListTerraformVersionsUsingGET1Params object
// with the default values initialized.
func NewListTerraformVersionsUsingGET1Params() *ListTerraformVersionsUsingGET1Params {
	var ()
	return &ListTerraformVersionsUsingGET1Params{

		timeout: cr.DefaultTimeout,
	}
}

// NewListTerraformVersionsUsingGET1ParamsWithTimeout creates a new ListTerraformVersionsUsingGET1Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewListTerraformVersionsUsingGET1ParamsWithTimeout(timeout time.Duration) *ListTerraformVersionsUsingGET1Params {
	var ()
	return &ListTerraformVersionsUsingGET1Params{

		timeout: timeout,
	}
}

// NewListTerraformVersionsUsingGET1ParamsWithContext creates a new ListTerraformVersionsUsingGET1Params object
// with the default values initialized, and the ability to set a context for a request
func NewListTerraformVersionsUsingGET1ParamsWithContext(ctx context.Context) *ListTerraformVersionsUsingGET1Params {
	var ()
	return &ListTerraformVersionsUsingGET1Params{

		Context: ctx,
	}
}

// NewListTerraformVersionsUsingGET1ParamsWithHTTPClient creates a new ListTerraformVersionsUsingGET1Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListTerraformVersionsUsingGET1ParamsWithHTTPClient(client *http.Client) *ListTerraformVersionsUsingGET1Params {
	var ()
	return &ListTerraformVersionsUsingGET1Params{
		HTTPClient: client,
	}
}

/*ListTerraformVersionsUsingGET1Params contains all the parameters to send to the API endpoint
for the list terraform versions using get1 operation typically these are written to a http.Request
*/
type ListTerraformVersionsUsingGET1Params struct {

	/*DollarOrderby
	  Sorting criteria in the format: property (asc|desc). Default sort order is descending on updatedAt. Sorting is supported on fields createdAt, updatedAt, createdBy, updatedBy, version.

	*/
	DollarOrderby []string
	/*DollarSkip
	  Number of records you want to skip

	*/
	DollarSkip *int32
	/*DollarTop
	  Number of records you want

	*/
	DollarTop *int32
	/*OnlyEnabled
	  Include only enabled versions

	*/
	OnlyEnabled *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list terraform versions using get1 params
func (o *ListTerraformVersionsUsingGET1Params) WithTimeout(timeout time.Duration) *ListTerraformVersionsUsingGET1Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list terraform versions using get1 params
func (o *ListTerraformVersionsUsingGET1Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list terraform versions using get1 params
func (o *ListTerraformVersionsUsingGET1Params) WithContext(ctx context.Context) *ListTerraformVersionsUsingGET1Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list terraform versions using get1 params
func (o *ListTerraformVersionsUsingGET1Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list terraform versions using get1 params
func (o *ListTerraformVersionsUsingGET1Params) WithHTTPClient(client *http.Client) *ListTerraformVersionsUsingGET1Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list terraform versions using get1 params
func (o *ListTerraformVersionsUsingGET1Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDollarOrderby adds the dollarOrderby to the list terraform versions using get1 params
func (o *ListTerraformVersionsUsingGET1Params) WithDollarOrderby(dollarOrderby []string) *ListTerraformVersionsUsingGET1Params {
	o.SetDollarOrderby(dollarOrderby)
	return o
}

// SetDollarOrderby adds the dollarOrderby to the list terraform versions using get1 params
func (o *ListTerraformVersionsUsingGET1Params) SetDollarOrderby(dollarOrderby []string) {
	o.DollarOrderby = dollarOrderby
}

// WithDollarSkip adds the dollarSkip to the list terraform versions using get1 params
func (o *ListTerraformVersionsUsingGET1Params) WithDollarSkip(dollarSkip *int32) *ListTerraformVersionsUsingGET1Params {
	o.SetDollarSkip(dollarSkip)
	return o
}

// SetDollarSkip adds the dollarSkip to the list terraform versions using get1 params
func (o *ListTerraformVersionsUsingGET1Params) SetDollarSkip(dollarSkip *int32) {
	o.DollarSkip = dollarSkip
}

// WithDollarTop adds the dollarTop to the list terraform versions using get1 params
func (o *ListTerraformVersionsUsingGET1Params) WithDollarTop(dollarTop *int32) *ListTerraformVersionsUsingGET1Params {
	o.SetDollarTop(dollarTop)
	return o
}

// SetDollarTop adds the dollarTop to the list terraform versions using get1 params
func (o *ListTerraformVersionsUsingGET1Params) SetDollarTop(dollarTop *int32) {
	o.DollarTop = dollarTop
}

// WithOnlyEnabled adds the onlyEnabled to the list terraform versions using get1 params
func (o *ListTerraformVersionsUsingGET1Params) WithOnlyEnabled(onlyEnabled *bool) *ListTerraformVersionsUsingGET1Params {
	o.SetOnlyEnabled(onlyEnabled)
	return o
}

// SetOnlyEnabled adds the onlyEnabled to the list terraform versions using get1 params
func (o *ListTerraformVersionsUsingGET1Params) SetOnlyEnabled(onlyEnabled *bool) {
	o.OnlyEnabled = onlyEnabled
}

// WriteToRequest writes these params to a swagger request
func (o *ListTerraformVersionsUsingGET1Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesDollarOrderby := o.DollarOrderby

	joinedDollarOrderby := swag.JoinByFormat(valuesDollarOrderby, "multi")
	// query array param $orderby
	if err := r.SetQueryParam("$orderby", joinedDollarOrderby...); err != nil {
		return err
	}

	if o.DollarSkip != nil {

		// query param $skip
		var qrDollarSkip int32
		if o.DollarSkip != nil {
			qrDollarSkip = *o.DollarSkip
		}
		qDollarSkip := swag.FormatInt32(qrDollarSkip)
		if qDollarSkip != "" {
			if err := r.SetQueryParam("$skip", qDollarSkip); err != nil {
				return err
			}
		}

	}

	if o.DollarTop != nil {

		// query param $top
		var qrDollarTop int32
		if o.DollarTop != nil {
			qrDollarTop = *o.DollarTop
		}
		qDollarTop := swag.FormatInt32(qrDollarTop)
		if qDollarTop != "" {
			if err := r.SetQueryParam("$top", qDollarTop); err != nil {
				return err
			}
		}

	}

	if o.OnlyEnabled != nil {

		// query param onlyEnabled
		var qrOnlyEnabled bool
		if o.OnlyEnabled != nil {
			qrOnlyEnabled = *o.OnlyEnabled
		}
		qOnlyEnabled := swag.FormatBool(qrOnlyEnabled)
		if qOnlyEnabled != "" {
			if err := r.SetQueryParam("onlyEnabled", qOnlyEnabled); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
