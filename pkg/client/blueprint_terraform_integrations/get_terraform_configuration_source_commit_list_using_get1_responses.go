// Code generated by go-swagger; DO NOT EDIT.

package blueprint_terraform_integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetTerraformConfigurationSourceCommitListUsingGET1Reader is a Reader for the GetTerraformConfigurationSourceCommitListUsingGET1 structure.
type GetTerraformConfigurationSourceCommitListUsingGET1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTerraformConfigurationSourceCommitListUsingGET1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTerraformConfigurationSourceCommitListUsingGET1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTerraformConfigurationSourceCommitListUsingGET1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTerraformConfigurationSourceCommitListUsingGET1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTerraformConfigurationSourceCommitListUsingGET1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTerraformConfigurationSourceCommitListUsingGET1OK creates a GetTerraformConfigurationSourceCommitListUsingGET1OK with default headers values
func NewGetTerraformConfigurationSourceCommitListUsingGET1OK() *GetTerraformConfigurationSourceCommitListUsingGET1OK {
	return &GetTerraformConfigurationSourceCommitListUsingGET1OK{}
}

/*GetTerraformConfigurationSourceCommitListUsingGET1OK handles this case with default header values.

OK
*/
type GetTerraformConfigurationSourceCommitListUsingGET1OK struct {
	Payload *models.PageOfCommitDetails
}

func (o *GetTerraformConfigurationSourceCommitListUsingGET1OK) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprint-integrations/terraform/get-configuration-source-commits][%d] getTerraformConfigurationSourceCommitListUsingGET1OK  %+v", 200, o.Payload)
}

func (o *GetTerraformConfigurationSourceCommitListUsingGET1OK) GetPayload() *models.PageOfCommitDetails {
	return o.Payload
}

func (o *GetTerraformConfigurationSourceCommitListUsingGET1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfCommitDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformConfigurationSourceCommitListUsingGET1BadRequest creates a GetTerraformConfigurationSourceCommitListUsingGET1BadRequest with default headers values
func NewGetTerraformConfigurationSourceCommitListUsingGET1BadRequest() *GetTerraformConfigurationSourceCommitListUsingGET1BadRequest {
	return &GetTerraformConfigurationSourceCommitListUsingGET1BadRequest{}
}

/*GetTerraformConfigurationSourceCommitListUsingGET1BadRequest handles this case with default header values.

Bad Request
*/
type GetTerraformConfigurationSourceCommitListUsingGET1BadRequest struct {
	Payload *models.Error
}

func (o *GetTerraformConfigurationSourceCommitListUsingGET1BadRequest) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprint-integrations/terraform/get-configuration-source-commits][%d] getTerraformConfigurationSourceCommitListUsingGET1BadRequest  %+v", 400, o.Payload)
}

func (o *GetTerraformConfigurationSourceCommitListUsingGET1BadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTerraformConfigurationSourceCommitListUsingGET1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformConfigurationSourceCommitListUsingGET1Unauthorized creates a GetTerraformConfigurationSourceCommitListUsingGET1Unauthorized with default headers values
func NewGetTerraformConfigurationSourceCommitListUsingGET1Unauthorized() *GetTerraformConfigurationSourceCommitListUsingGET1Unauthorized {
	return &GetTerraformConfigurationSourceCommitListUsingGET1Unauthorized{}
}

/*GetTerraformConfigurationSourceCommitListUsingGET1Unauthorized handles this case with default header values.

Unauthorized
*/
type GetTerraformConfigurationSourceCommitListUsingGET1Unauthorized struct {
}

func (o *GetTerraformConfigurationSourceCommitListUsingGET1Unauthorized) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprint-integrations/terraform/get-configuration-source-commits][%d] getTerraformConfigurationSourceCommitListUsingGET1Unauthorized ", 401)
}

func (o *GetTerraformConfigurationSourceCommitListUsingGET1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTerraformConfigurationSourceCommitListUsingGET1Forbidden creates a GetTerraformConfigurationSourceCommitListUsingGET1Forbidden with default headers values
func NewGetTerraformConfigurationSourceCommitListUsingGET1Forbidden() *GetTerraformConfigurationSourceCommitListUsingGET1Forbidden {
	return &GetTerraformConfigurationSourceCommitListUsingGET1Forbidden{}
}

/*GetTerraformConfigurationSourceCommitListUsingGET1Forbidden handles this case with default header values.

Forbidden
*/
type GetTerraformConfigurationSourceCommitListUsingGET1Forbidden struct {
}

func (o *GetTerraformConfigurationSourceCommitListUsingGET1Forbidden) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprint-integrations/terraform/get-configuration-source-commits][%d] getTerraformConfigurationSourceCommitListUsingGET1Forbidden ", 403)
}

func (o *GetTerraformConfigurationSourceCommitListUsingGET1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
