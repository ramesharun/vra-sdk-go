// Code generated by go-swagger; DO NOT EDIT.

package deployment_requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetDeploymentRequestsUsingGETReader is a Reader for the GetDeploymentRequestsUsingGET structure.
type GetDeploymentRequestsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeploymentRequestsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeploymentRequestsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDeploymentRequestsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDeploymentRequestsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDeploymentRequestsUsingGETOK creates a GetDeploymentRequestsUsingGETOK with default headers values
func NewGetDeploymentRequestsUsingGETOK() *GetDeploymentRequestsUsingGETOK {
	return &GetDeploymentRequestsUsingGETOK{}
}

/*GetDeploymentRequestsUsingGETOK handles this case with default header values.

OK
*/
type GetDeploymentRequestsUsingGETOK struct {
	Payload *models.PageOfRequest
}

func (o *GetDeploymentRequestsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /deployment/api/deployments/{depId}/requests][%d] getDeploymentRequestsUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetDeploymentRequestsUsingGETOK) GetPayload() *models.PageOfRequest {
	return o.Payload
}

func (o *GetDeploymentRequestsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentRequestsUsingGETUnauthorized creates a GetDeploymentRequestsUsingGETUnauthorized with default headers values
func NewGetDeploymentRequestsUsingGETUnauthorized() *GetDeploymentRequestsUsingGETUnauthorized {
	return &GetDeploymentRequestsUsingGETUnauthorized{}
}

/*GetDeploymentRequestsUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDeploymentRequestsUsingGETUnauthorized struct {
}

func (o *GetDeploymentRequestsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /deployment/api/deployments/{depId}/requests][%d] getDeploymentRequestsUsingGETUnauthorized ", 401)
}

func (o *GetDeploymentRequestsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeploymentRequestsUsingGETNotFound creates a GetDeploymentRequestsUsingGETNotFound with default headers values
func NewGetDeploymentRequestsUsingGETNotFound() *GetDeploymentRequestsUsingGETNotFound {
	return &GetDeploymentRequestsUsingGETNotFound{}
}

/*GetDeploymentRequestsUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetDeploymentRequestsUsingGETNotFound struct {
	Payload *models.Error
}

func (o *GetDeploymentRequestsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /deployment/api/deployments/{depId}/requests][%d] getDeploymentRequestsUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetDeploymentRequestsUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDeploymentRequestsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
